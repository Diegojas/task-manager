## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Task Management'
description: |-

  APIs for managing tasks
endpoints:
  -
    httpMethods:
      - GET
    uri: api/tasks
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'List all tasks for authenticated user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [{
           "id": 1,
           "user_id": 1,
           "title": "Sample task",
           "description": "This is a sample task description.",
           "status": "pending",
           "created_at": "2021-01-01T00:00:00.000000Z",
           "updated_at": "2021-01-01T00:00:00.000000Z"
          }]
        headers: []
        description: 'when authenticated'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kZfc6dEvV6P4e3aaDhb5g18'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tasks
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new task for authenticated user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the task.'
        required: true
        example: 'Finish homework'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: 'The description of the task.'
        required: false
        example: 'Math, Literature and Sciences'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      status:
        name: status
        description: 'The status of the task.'
        required: false
        example: pending
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      title: 'Finish homework'
      description: 'Math, Literature and Sciences'
      status: pending
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "id": 1,
           "user_id": 1,
           "title": "Finish homework",
           "description": "Math, Literature and Sciences",
           "status": "pending",
           "created_at": "2021-01-01T00:00:00.000000Z",
           "updated_at": "2021-01-01T00:00:00.000000Z"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 816ZDhkdVaEa43cf5eg6Pvb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific task by ID for authenticated user'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      task:
        name: task
        description: 'The ID of the task.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 9
      task: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "user_id": 1,
           "title": "Finish homework",
           "description": "Math, Literature and Sciences",
           "status": "pending",
           "created_at": "2021-01-01T00:00:00.000000Z",
           "updated_at": "2021-01-01T00:00:00.000000Z"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a1PehcgV5Dfka84Z6dvEb36'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a specific task'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      task:
        name: task
        description: 'The ID of the task.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 9
      task: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The new title of the task.'
        required: true
        example: 'Finish homework updated'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      description:
        name: description
        description: 'The new description of the task.'
        required: false
        example: 'Just Literature'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      status:
        name: status
        description: 'The new status of the task.'
        required: false
        example: completed
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      title: 'Finish homework updated'
      description: 'Just Literature'
      status: completed
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "user_id": 1,
           "title": "Finish homework updated",
           "description": "Just Literature",
           "status": "completed",
           "created_at": "2021-01-01T00:00:00.000000Z",
           "updated_at": "2021-01-01T00:00:00.000000Z"
          }
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer c5D4dfk36EaPgv8ZVh1ea6b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tasks/{id}'
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a specific task'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: 9
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      task:
        name: task
        description: 'The ID of the task that needs to be deleted.'
        required: true
        example: '1'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      id: 9
      task: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: success
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6VDga1fc8vZ43dEkP65ehba'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/stats
    metadata:
      groupName: 'Task Management'
      groupDescription: |-

        APIs for managing tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Get Statistics of Tasks'
      description: 'Fetch statistics related to the tasks of the authenticated user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "tasks": {
               "totalTasks": 10,
               "pendingTasks": 5,
               "newTasks": 2,
               "completedTask": 0
           }
          }
        headers: []
        description: 'when authenticated'
        custom: []
    responseFields:
      tasks.totalTasks:
        name: tasks.totalTasks
        description: 'Total number of tasks the user has'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tasks.pendingTasks:
        name: tasks.pendingTasks
        description: "Total number of tasks with 'pending' status"
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      tasks.newTasks:
        name: tasks.newTasks
        description: 'Number of newly created tasks in the past week'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    auth:
      - headers
      - Authorization
      - 'Bearer gc6a3PdkvZbfe4a61hV5E8D'
    controller: null
    method: null
    route: null
    custom: []
